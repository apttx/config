#!/usr/env/bash

alias st="git status -uall -M"
alias fe="git fetch"
alias lg="git log"
alias br="git branch"
alias pq="git push -u origin HEAD"
alias pqf="git push -u origin HEAD --force-with-lease"
alias pqnv="git push -u origin HEAD --no-verify"
alias cf="git config user.name && git config user.email"
alias di="git diff"

cl() {
git clone "$@" && cf;
}

pw() {
git pull "$@";
}

a() {
git add "$@" && st;
}

cm() {
git commit -m "$@" && st;
}

cz() {
git-cz --type "$1" --scope "$2" && st;
}

ch() {
git checkout "$@";
}

cb() {
git checkout -b "$@";
}

rb() {
git rebase "$@";
}

re() {
git reset "$@" && st;
}

rp(){
git stash -- "$@" && git stash drop && st;
}

scf() {
git config user.name "$1" && git config user.email "$2";
}

bd() {
git branch -d "$@" && br;
}

dp() {
git diff -- "*$@*";
}

dpa() {
dp "$@" && echo && echo ">>>>>>>>>>>>" && echo && st --short -- "$@" && echo && read -p "^ Add these?" && a "$@";
}

bdm() {
for BRANCH in $(git branch --merged | grep -v master)
do
read -p "Delete $BRANCH? (y/N)" DELETE;
if [ "$DELETE" == "y" ]; then
echo "  🗑️  $BRANCH" && git branch -d "$BRANCH";
fi
done
}

source ~/.git-completion.bash
__git_complete cl _git_clone
__git_complete pw _git_pull
__git_complete fp _git_pull
__git_complete ch _git_checkout
__git_complete cb _git_checkout
__git_complete rb _git_rebase
__git_complete a _git_add
__git_complete dpa _git_add
__git_complete re _git_reset
__git_complete br _git_branch
__git_complete bd _git_branch
__git_complete pq _git_push
__git_complete pqnv _git_push
__git_complete di _git_diff

complete -W "chore docs feat fix refactor style test" cz

gitgui() {
while [ true ]
do
clear;
echo "* GIT GUI *";
echo "📁 files";
git status -s;
echo;
echo "🌳 branches";
git branch;
echo;
echo "📜 log";
git log --format="%Cblue[%an]%C(auto) %s %d" --max-count=${1:-10};
sleep ${2:-3s};
done 
}

alias gg="gitgui"

